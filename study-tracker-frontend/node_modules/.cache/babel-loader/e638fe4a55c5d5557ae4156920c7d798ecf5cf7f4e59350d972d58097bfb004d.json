{"ast":null,"code":"// api.js\nconst API_URL = \"http://localhost:5000\"; // Change this based on your backend URL\n\nexport const registerUser = async userData => {\n  try {\n    const response = await fetch(`${API_URL}/register`, {\n      method: \"POST\",\n      body: userData\n    });\n    return response.json();\n  } catch (error) {\n    console.error(\"Registration failed:\", error);\n    return {\n      success: false,\n      message: \"Failed to register user.\"\n    };\n  }\n};\nexport const loginUser = async loginData => {\n  try {\n    const response = await fetch(`${API_URL}/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(loginData)\n    });\n    return response.json();\n  } catch (error) {\n    console.error(\"Login failed:\", error);\n    return {\n      success: false,\n      message: \"Failed to login.\"\n    };\n  }\n};","map":{"version":3,"names":["API_URL","registerUser","userData","response","fetch","method","body","json","error","console","success","message","loginUser","loginData","headers","JSON","stringify"],"sources":["E:/BE/6th sem/Project/TrackU/study-tracker-frontend/src/utils/api.js"],"sourcesContent":["// api.js\r\nconst API_URL = \"http://localhost:5000\"; // Change this based on your backend URL\r\n\r\nexport const registerUser = async (userData) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/register`, {\r\n      method: \"POST\",\r\n      body: userData,\r\n    });\r\n    return response.json();\r\n  } catch (error) {\r\n    console.error(\"Registration failed:\", error);\r\n    return { success: false, message: \"Failed to register user.\" };\r\n  }\r\n};\r\n\r\nexport const loginUser = async (loginData) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/login`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(loginData),\r\n    });\r\n    return response.json();\r\n  } catch (error) {\r\n    console.error(\"Login failed:\", error);\r\n    return { success: false, message: \"Failed to login.\" };\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAG,uBAAuB,CAAC,CAAC;;AAEzC,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,WAAW,EAAE;MAClDK,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEJ;IACR,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACI,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO;MAAEE,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAA2B,CAAC;EAChE;AACF,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAOC,SAAS,IAAK;EAC5C,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,QAAQ,EAAE;MAC/CK,MAAM,EAAE,MAAM;MACdS,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDR,IAAI,EAAES,IAAI,CAACC,SAAS,CAACH,SAAS;IAChC,CAAC,CAAC;IACF,OAAOV,QAAQ,CAACI,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACrC,OAAO;MAAEE,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAmB,CAAC;EACxD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}