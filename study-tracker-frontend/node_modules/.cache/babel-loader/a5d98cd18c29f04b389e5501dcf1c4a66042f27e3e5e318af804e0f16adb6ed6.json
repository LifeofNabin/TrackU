{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api/auth'; // Adjust if backend URL differs\n\n// Register a new user\nexport const registerUser = async userData => {\n  return await axios.post(`${API_BASE_URL}/register`, userData);\n};\n\n// Login user\nexport const loginUser = async userData => {\n  return await axios.post(`${API_BASE_URL}/login`, userData);\n};\n\n// Fetch user profile (Protected route)\nexport const getUserProfile = async token => {\n  return await axios.get(`${API_BASE_URL}/me`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};","map":{"version":3,"names":["axios","API_BASE_URL","registerUser","userData","post","loginUser","getUserProfile","token","get","headers","Authorization"],"sources":["E:/BE/6th sem/Project/TrackU/study-tracker-frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api/auth'; // Adjust if backend URL differs\r\n\r\n// Register a new user\r\nexport const registerUser = async (userData) => {\r\n    return await axios.post(`${API_BASE_URL}/register`, userData);\r\n};\r\n\r\n// Login user\r\nexport const loginUser = async (userData) => {\r\n    return await axios.post(`${API_BASE_URL}/login`, userData);\r\n};\r\n\r\n// Fetch user profile (Protected route)\r\nexport const getUserProfile = async (token) => {\r\n    return await axios.get(`${API_BASE_URL}/me`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,gCAAgC,CAAC,CAAC;;AAEvD;AACA,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC5C,OAAO,MAAMH,KAAK,CAACI,IAAI,CAAC,GAAGH,YAAY,WAAW,EAAEE,QAAQ,CAAC;AACjE,CAAC;;AAED;AACA,OAAO,MAAME,SAAS,GAAG,MAAOF,QAAQ,IAAK;EACzC,OAAO,MAAMH,KAAK,CAACI,IAAI,CAAC,GAAGH,YAAY,QAAQ,EAAEE,QAAQ,CAAC;AAC9D,CAAC;;AAED;AACA,OAAO,MAAMG,cAAc,GAAG,MAAOC,KAAK,IAAK;EAC3C,OAAO,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,YAAY,KAAK,EAAE;IACzCQ,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUH,KAAK;IAAG;EAChD,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}