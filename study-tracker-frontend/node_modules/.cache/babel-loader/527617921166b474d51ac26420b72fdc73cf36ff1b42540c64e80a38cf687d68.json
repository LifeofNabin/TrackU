{"ast":null,"code":"var _jsxFileName = \"E:\\\\BE\\\\6th sem\\\\Project\\\\TrackU\\\\study-tracker-frontend\\\\src\\\\pages\\\\AuthPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Webcam from \"react-webcam\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/AuthPage.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AuthPage = () => {\n  _s();\n  const [isRegister, setIsRegister] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const webcamRef = React.useRef(null);\n  const navigate = useNavigate();\n  const capture = () => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImage(imageSrc); // Save the captured image (base64 string)\n  };\n  const handleAuth = async () => {\n    if (isRegister) {\n      if (!email || !password || !image) {\n        alert(\"Please fill in all fields and capture your face.\");\n        return;\n      }\n      const formData = new FormData();\n      formData.append(\"email\", email);\n      formData.append(\"password\", password);\n      formData.append(\"faceData\", image.split(\",\")[1]); // Send base64 image string to backend\n\n      try {\n        const response = await fetch(\"http://localhost:5000/register\", {\n          method: \"POST\",\n          body: formData\n        });\n        const data = await response.json();\n        if (data.success) {\n          alert(`Registration successful! Your user ID is: ${data.userId}`);\n          navigate(\"/login\");\n        } else {\n          alert(data.message);\n        }\n      } catch (error) {\n        console.error(\"Error registering user:\", error);\n        alert(\"An error occurred while registering.\");\n      }\n    } else {\n      // Login logic\n      if (!userId || !password || !image) {\n        alert(\"Please fill in all fields and capture your face.\");\n        return;\n      }\n      const loginData = {\n        userId,\n        password,\n        faceData: image.split(\",\")[1] // Send face data for face recognition\n      };\n      try {\n        const response = await fetch(\"http://localhost:5000/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(loginData)\n        });\n        const data = await response.json();\n        if (data.success) {\n          alert(\"Login successful!\");\n          navigate(\"/dashboard\");\n        } else {\n          alert(data.message);\n        }\n      } catch (error) {\n        console.error(\"Error logging in:\", error);\n        alert(\"An error occurred while logging in.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isRegister ? \"Register\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsRegister(false),\n          className: \"auth-btn login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsRegister(true),\n          className: \"auth-btn register\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [isRegister ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"User ID / Email\",\n            value: userId,\n            onChange: e => setUserId(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"webcam-container\",\n          children: [/*#__PURE__*/_jsxDEV(Webcam, {\n            ref: webcamRef,\n            screenshotFormat: \"image/jpeg\",\n            className: \"webcam\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: capture,\n            className: \"capture-btn\",\n            children: \"Capture Face\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAuth,\n        className: \"auth-btn submit\",\n        children: isRegister ? \"Register\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthPage, \"TFlfiRVRsh4pTfyT1YOjJExJyJY=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","useState","Webcam","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","AuthPage","_s","isRegister","setIsRegister","email","setEmail","password","setPassword","userId","setUserId","image","setImage","webcamRef","useRef","navigate","capture","imageSrc","current","getScreenshot","handleAuth","alert","formData","FormData","append","split","response","fetch","method","body","data","json","success","message","error","console","loginData","faceData","headers","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","ref","screenshotFormat","_c","$RefreshReg$"],"sources":["E:/BE/6th sem/Project/TrackU/study-tracker-frontend/src/pages/AuthPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/AuthPage.css\";\r\n\r\nconst AuthPage = () => {\r\n  const [isRegister, setIsRegister] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [image, setImage] = useState(null);\r\n  const webcamRef = React.useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  const capture = () => {\r\n    const imageSrc = webcamRef.current.getScreenshot();\r\n    setImage(imageSrc); // Save the captured image (base64 string)\r\n  };\r\n\r\n  const handleAuth = async () => {\r\n    if (isRegister) {\r\n      if (!email || !password || !image) {\r\n        alert(\"Please fill in all fields and capture your face.\");\r\n        return;\r\n      }\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"email\", email);\r\n      formData.append(\"password\", password);\r\n      formData.append(\"faceData\", image.split(\",\")[1]); // Send base64 image string to backend\r\n\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/register\", {\r\n          method: \"POST\",\r\n          body: formData,\r\n        });\r\n\r\n        const data = await response.json();\r\n        if (data.success) {\r\n          alert(`Registration successful! Your user ID is: ${data.userId}`);\r\n          navigate(\"/login\");\r\n        } else {\r\n          alert(data.message);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error registering user:\", error);\r\n        alert(\"An error occurred while registering.\");\r\n      }\r\n    } else {\r\n      // Login logic\r\n      if (!userId || !password || !image) {\r\n        alert(\"Please fill in all fields and capture your face.\");\r\n        return;\r\n      }\r\n\r\n      const loginData = {\r\n        userId,\r\n        password,\r\n        faceData: image.split(\",\")[1], // Send face data for face recognition\r\n      };\r\n\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/login\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(loginData),\r\n        });\r\n\r\n        const data = await response.json();\r\n        if (data.success) {\r\n          alert(\"Login successful!\");\r\n          navigate(\"/dashboard\");\r\n        } else {\r\n          alert(data.message);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error logging in:\", error);\r\n        alert(\"An error occurred while logging in.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-box\">\r\n        <h2>{isRegister ? \"Register\" : \"Login\"}</h2>\r\n        <div className=\"auth-buttons\">\r\n          <button onClick={() => setIsRegister(false)} className=\"auth-btn login\">Login</button>\r\n          <button onClick={() => setIsRegister(true)} className=\"auth-btn register\">Register</button>\r\n        </div>\r\n        <div className=\"form-container\">\r\n          {isRegister ? (\r\n            <>\r\n              <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n              <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <input type=\"text\" placeholder=\"User ID / Email\" value={userId} onChange={(e) => setUserId(e.target.value)} />\r\n              <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n            </>\r\n          )}\r\n          <div className=\"webcam-container\">\r\n            <Webcam ref={webcamRef} screenshotFormat=\"image/jpeg\" className=\"webcam\" />\r\n            <button onClick={capture} className=\"capture-btn\">Capture Face</button>\r\n          </div>\r\n        </div>\r\n        <button onClick={handleAuth} className=\"auth-btn submit\">{isRegister ? \"Register\" : \"Login\"}</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMmB,SAAS,GAAGpB,KAAK,CAACqB,MAAM,CAAC,IAAI,CAAC;EACpC,MAAMC,QAAQ,GAAGnB,WAAW,CAAC,CAAC;EAE9B,MAAMoB,OAAO,GAAGA,CAAA,KAAM;IACpB,MAAMC,QAAQ,GAAGJ,SAAS,CAACK,OAAO,CAACC,aAAa,CAAC,CAAC;IAClDP,QAAQ,CAACK,QAAQ,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,MAAMG,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAIjB,UAAU,EAAE;MACd,IAAI,CAACE,KAAK,IAAI,CAACE,QAAQ,IAAI,CAACI,KAAK,EAAE;QACjCU,KAAK,CAAC,kDAAkD,CAAC;QACzD;MACF;MAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEnB,KAAK,CAAC;MAC/BiB,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEjB,QAAQ,CAAC;MACrCe,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEb,KAAK,CAACc,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;MAElD,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;UAC7DC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEP;QACR,CAAC,CAAC;QAEF,MAAMQ,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClC,IAAID,IAAI,CAACE,OAAO,EAAE;UAChBX,KAAK,CAAC,6CAA6CS,IAAI,CAACrB,MAAM,EAAE,CAAC;UACjEM,QAAQ,CAAC,QAAQ,CAAC;QACpB,CAAC,MAAM;UACLM,KAAK,CAACS,IAAI,CAACG,OAAO,CAAC;QACrB;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/Cb,KAAK,CAAC,sCAAsC,CAAC;MAC/C;IACF,CAAC,MAAM;MACL;MACA,IAAI,CAACZ,MAAM,IAAI,CAACF,QAAQ,IAAI,CAACI,KAAK,EAAE;QAClCU,KAAK,CAAC,kDAAkD,CAAC;QACzD;MACF;MAEA,MAAMe,SAAS,GAAG;QAChB3B,MAAM;QACNF,QAAQ;QACR8B,QAAQ,EAAE1B,KAAK,CAACc,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAE;MACjC,CAAC;MAED,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;UAC1DC,MAAM,EAAE,MAAM;UACdU,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDT,IAAI,EAAEU,IAAI,CAACC,SAAS,CAACJ,SAAS;QAChC,CAAC,CAAC;QAEF,MAAMN,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClC,IAAID,IAAI,CAACE,OAAO,EAAE;UAChBX,KAAK,CAAC,mBAAmB,CAAC;UAC1BN,QAAQ,CAAC,YAAY,CAAC;QACxB,CAAC,MAAM;UACLM,KAAK,CAACS,IAAI,CAACG,OAAO,CAAC;QACrB;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;QACzCb,KAAK,CAAC,qCAAqC,CAAC;MAC9C;IACF;EACF,CAAC;EAED,oBACEvB,OAAA;IAAK2C,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7B5C,OAAA;MAAK2C,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvB5C,OAAA;QAAA4C,QAAA,EAAKvC,UAAU,GAAG,UAAU,GAAG;MAAO;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5ChD,OAAA;QAAK2C,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3B5C,OAAA;UAAQiD,OAAO,EAAEA,CAAA,KAAM3C,aAAa,CAAC,KAAK,CAAE;UAACqC,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACtFhD,OAAA;UAAQiD,OAAO,EAAEA,CAAA,KAAM3C,aAAa,CAAC,IAAI,CAAE;UAACqC,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxF,CAAC,eACNhD,OAAA;QAAK2C,SAAS,EAAC,gBAAgB;QAAAC,QAAA,GAC5BvC,UAAU,gBACTL,OAAA,CAAAE,SAAA;UAAA0C,QAAA,gBACE5C,OAAA;YAAOkD,IAAI,EAAC,OAAO;YAACC,WAAW,EAAC,OAAO;YAACC,KAAK,EAAE7C,KAAM;YAAC8C,QAAQ,EAAGC,CAAC,IAAK9C,QAAQ,CAAC8C,CAAC,CAACC,MAAM,CAACH,KAAK;UAAE;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACnGhD,OAAA;YAAOkD,IAAI,EAAC,UAAU;YAACC,WAAW,EAAC,UAAU;YAACC,KAAK,EAAE3C,QAAS;YAAC4C,QAAQ,EAAGC,CAAC,IAAK5C,WAAW,CAAC4C,CAAC,CAACC,MAAM,CAACH,KAAK;UAAE;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA,eAC/G,CAAC,gBAEHhD,OAAA,CAAAE,SAAA;UAAA0C,QAAA,gBACE5C,OAAA;YAAOkD,IAAI,EAAC,MAAM;YAACC,WAAW,EAAC,iBAAiB;YAACC,KAAK,EAAEzC,MAAO;YAAC0C,QAAQ,EAAGC,CAAC,IAAK1C,SAAS,CAAC0C,CAAC,CAACC,MAAM,CAACH,KAAK;UAAE;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC9GhD,OAAA;YAAOkD,IAAI,EAAC,UAAU;YAACC,WAAW,EAAC,UAAU;YAACC,KAAK,EAAE3C,QAAS;YAAC4C,QAAQ,EAAGC,CAAC,IAAK5C,WAAW,CAAC4C,CAAC,CAACC,MAAM,CAACH,KAAK;UAAE;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA,eAC/G,CACH,eACDhD,OAAA;UAAK2C,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/B5C,OAAA,CAACH,MAAM;YAAC2D,GAAG,EAAEzC,SAAU;YAAC0C,gBAAgB,EAAC,YAAY;YAACd,SAAS,EAAC;UAAQ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC3EhD,OAAA;YAAQiD,OAAO,EAAE/B,OAAQ;YAACyB,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNhD,OAAA;QAAQiD,OAAO,EAAE3B,UAAW;QAACqB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAEvC,UAAU,GAAG,UAAU,GAAG;MAAO;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5C,EAAA,CA5GID,QAAQ;EAAA,QAOKL,WAAW;AAAA;AAAA4D,EAAA,GAPxBvD,QAAQ;AA8Gd,eAAeA,QAAQ;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}